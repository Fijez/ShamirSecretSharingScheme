–еализовать схему разделени€ секрета Ўамира.

ƒл€ пороговой схемы K=4 (минимальное количество участников,
 необходимых дл€ восстановлени€ секрета)

ƒл€ унификации интерфейсов в предлагаетс€ использовать подкаталог
 secretImpl дл€ загрузки/сохранени€ секрета, подкаталог parts дл€ загрузка/сохранени€
 частей секрета.


ѕриложение дл€ разделени€ секрета

¬ходные данные:
    текстовый файл в формате JSON, содержащий секрет. ≈сли помимо секрета
     присутствует параметр P, используем параметр P дл€ создани€ частей,
     если P не указан - генерируем.
    количество генерируемых частей

¬ыходные данные:
    текстовые файлы в формате JSON, содержащие части секрета
    ƒопускаетс€ довыпуск частей секрета, при условии наличи€
     коалиции необходимого количества участников, которые могут
     восстановить секрет и сгенерировать дополнительные части.


ѕриложение дл€ восстановлени€ секрета

¬ходные данные:
    текстовые файл в формате JSON, содержащие части секрета
    ¬ыполн€етс€ проверка частей, если ошибок нет -
     создает текстовый файл JSON с секретом.

¬ы€вл€ет и обрабатывает ошибки:
    недостаточное количество частей секрета;
    недостаточное количество частей секрета (дублирование частей секрета в разных файлах);
    нарушение формата файла с частью секрета.

ѕример файла с секретом. —одержит значение секрета. ћожет
 содержать параметр P, если фал с секретом получен при восстановлении из частей.
{
"Secret": 123456
"PartsCount": 9
"P": 111
}

ѕример файла с частью секрета. —одержит часть секрета и параметр P.
{
"Value": 123456,
"Point": 123,
"P": 123456789
}